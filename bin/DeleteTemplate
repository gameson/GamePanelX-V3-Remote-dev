#!/bin/bash
#
# GamePanelX
# Remote scripts v3.0.15
#
# Delete a Game/Voice Template
#

#
# Example usage:
# ./DeleteTemplate -i 24
#
archive_id=

while getopts "i:" OPTION
do
     case $OPTION in
         i)
             archive_id=$OPTARG
             ;;
         ?)
             exit
             ;;
     esac
done

if [ "$archive_id" == "" ]
then
    echo "DeleteTemplate: Required settings were left out.  Exiting."
    exit
fi

# Home Dir
tpl_tmp=/usr/local/gpx/tmp/$archive_id

# Kill any related processes (game installer PID)
if [ -f $tpl_tmp/.gpxpid ]
then
    game_install_pid=`cat $tpl_tmp/.gpxpid`
    game_child=$(ps -ef | grep "$game_install_pid" | grep -v grep | awk '{print $2}' | grep -v "$game_install_pid")

    # Kill game child processes first
    if [ "`ps aux | grep "$game_child" | grep -v grep`" ]
    then
        for child_pid in $(ps -ef | grep "$game_child" | grep -v grep | awk '{print $2}')
        do
		if [ "$child_pid" ]; then kill -9 $child_pid; fi
        done
    fi

    # Kill game installer and it's child processes
    if [ "$(ps aux | grep "$game_install_pid" | grep -v grep)" ]
    then
	for srv_pid in $(ps -ef | grep "$game_install_pid" | grep -v grep | awk '{print $2}' | sort -r)
        do
		if [[ "$srv_pid" && -e /proc/$srv_pid ]]; then kill -9 $srv_pid; fi
        done
    fi
fi

# Watcher PID
if [ -f $tpl_tmp/.gpxinstall.pid ]
then
    	watcher_pid="$(cat $tpl_tmp/.gpxinstall.pid)"

    	# Kill watcher
	if [[ "$watcher_pid" && -e /proc/$watcher_pid ]]; then kill -9 $watcher_pid; fi
fi


# Kill any Steam processes
if [ -f $tpl_tmp/.gpxsteam.pid ]
then
	# Kill 'steaminstall.sh' process
	if [ -f $tpl_tmp/.gpxtplcheck.pid ]
	then
		ck_pid="$(cat $tpl_tmp/.gpxtplcheck.pid)"
		if [[ "$ck_pid" && -e /proc/$ck_pid ]]; then kill -9 $ck_pid; fi
	fi

	# Kill './steam -command update ...' process
	stm_pid="$(cat $tpl_tmp/.gpxsteam.pid)"
	if [[ "$stm_pid" && -e /proc/$stm_pid ]]; then kill -9 $stm_pid; fi
fi

# Remove Template tarball
if [[ -f /usr/local/gpx/templates/$archive_id.tar.gz || -d /usr/local/gpx/tmp/$archive_id ]]
then
	rm -fr /usr/local/gpx/templates/$archive_id.tar.gz /usr/local/gpx/templates/.gpx_$archive_id /usr/local/gpx/tmp/$archive_id/ >> /dev/null 2>&1 &
fi

echo "success"
